from copy import deepcopy

from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton, WebAppInfo

from telegram_bot.utils.process import check_process
from telegram_bot.keyboards.reply import KB_STOP_BOT, KB_START_BOT
from telegram_bot.database.methods.get import get_user_by_telegram_id


def get_main_keyboard(user_id: int) -> ReplyKeyboardMarkup:
    user = get_user_by_telegram_id(user_id)
    kb = deepcopy(KB_STOP_BOT if check_process(user_id) else KB_START_BOT)
    if user and user.session:
        kb.add(KeyboardButton(text="–£–¥–∞–ª–∏—Ç—å —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ ‚ö†Ô∏è"))
    kb.add("–£–∑–Ω–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã üìå")
    if not user.vip and not user.admin:
        kb.add(KeyboardButton(text="–ö—É–ø–∏—Ç—å –ø–æ–ª–Ω—É—é –≤–µ—Ä—Å–∏—é üí∏"))
    if not user.admin:
        kb.add("–¢–µ—Ö-–ø–æ–¥–¥–µ—Ä–∂–∫–∞ ‚öô")
    if user and user.admin:
        kb.add(KeyboardButton(text="Admin ü§°"))
    return kb


def get_admin_keyboard(user_id: int) -> InlineKeyboardMarkup:
    user = get_user_by_telegram_id(user_id)
    if not user.admin:
        raise Exception()
    kb = InlineKeyboardMarkup(1)
    kb.add(
        InlineKeyboardButton("–î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ ‚ûï", callback_data="add_admin"),
        InlineKeyboardButton(f"Vip {'–í–´–ö–õ ‚ùå' if user.vip else '–í–ö–õ ‚úÖ'}", callback_data="vip_switcher"),
        InlineKeyboardButton("–í—ã–¥–∞—Ç—å Vip ‚ú®", callback_data="give_vip"),
        InlineKeyboardButton("–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ ü§å", callback_data="analytics"),
        InlineKeyboardButton("–†–∞—Å—Å—ã–ª–∫–∞ ‚úâÔ∏è", callback_data="advertising"),
        InlineKeyboardButton("–í—ã–π—Ç–∏ ‚õîÔ∏è", callback_data="admin_exit"),
    )
    return kb


def get_payment_keyboard(link: str = '') -> InlineKeyboardMarkup:
    kb = InlineKeyboardMarkup(1)
    if link:
        kb.add(
            InlineKeyboardButton("–û–ø–ª–∞—Ç–∏—Ç—å", web_app=WebAppInfo(url=link))
        )
    kb.add(
        InlineKeyboardButton("–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É", callback_data="check_payment"),
    )
    return kb
